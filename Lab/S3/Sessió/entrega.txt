PREGUNTA 18.¿Cómo puede saber un proceso el pid de sus hijos? ¿Qué llamada pueden
utilizar los procesos para consultar su propio PID?

Al hacer fork devuelve al padre el PID del hijo. Para consultar su propio PID puede utilizar getpid().

PREGUNTA 19.¿En qué casos se ejecutará cualquier código que aparezca justo después de la
llamada execlp (En cualquier caso/ En caso que el execlp se ejecute de forma correcta/ En caso
que el exclp falle)?

En caso que el exclp falle

PREGUNTA 20.¿Qué directorios hay dentro de /proc/PID_PADRE? ¿Qué opción de ls has usado?

Los directorios dentro del PID del padre són attr/  cwd/  fd/  fdinfo/  map_files/  net/  ns/  root/  task/
Para verlos he utilizado #ls -d */

PREGUNTA 21.Para el proceso padre, apunta el contenido de los ficheros status y cmdline.
Compara el contenido del fichecro environ con el resultado del comando env (fíjate por ejemplo
en la variable PATH y la variable PWD) ¿Qué relación hay? Busca en el contenido del fichero
status el estado en el que se encuentra el proceso y apúntalo en el fichero de respuestas.
Anota también el tiempo de CPU que ha consumido en modo usuario que puedes encontrarlo
en el fichero stat del proceso (verás que stat contiene una serie de números, consulta en el
manual el formato qué representa cada uno de esos números: man proc).

# cat status

Name:	myPs_v0
Umask:	0002
State:	R (running)
Tgid:	8626
Ngid:	0
Pid:	8626
PPid:	5768
TracerPid:	0
Uid:	1000	1000	1000	1000
Gid:	1000	1000	1000	1000
FDSize:	256
Groups:	4 24 27 30 46 120 131 132 1000 
NStgid:	8626
NSpid:	8626
NSpgid:	8626
NSsid:	5768
VmPeak:	    2472 kB
VmSize:	    2376 kB
VmLck:	       0 kB
VmPin:	       0 kB
VmHWM:	     756 kB
VmRSS:	     756 kB
RssAnon:	      84 kB
RssFile:	     672 kB
RssShmem:	       0 kB
VmData:	      76 kB
VmStk:	     132 kB
VmExe:	       4 kB
VmLib:	    1616 kB
qVmPTE:	      36 kB
VmSwap:	       0 kB
HugetlbPages:	       0 kB
CoreDumping:	0
THP_enabled:	1
Threads:	1
SigQ:	0/63097
SigPnd:	0000000000000000
ShdPnd:	0000000000000000
SigBlk:	0000000000000000
SigIgn:	0000000000000000
SigCgt:	0000000000000000
CapInh:	0000000000000000
CapPrm:	0000000000000000
CapEff:	0000000000000000
CapBnd:	000001ffffffffff
CapAmb:	0000000000000000
NoNewPrivs:	0
Seccomp:	0
Seccomp_filters:	0
Speculation_Store_Bypass:	thread vulnerable
SpeculationIndirectBranch:	conditional enabled
Cpus_allowed:	ff
Cpus_allowed_list:	0-7
Mems_allowed:	00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001
Mems_allowed_list:	0
voluntary_ctxt_switches:	0
nonvoluntary_ctxt_switches:	2660

---------------

# cat cmdline

./myPs_v01234

---------------

La diferéncia está en la ruta en que aparece cada uno, env da la ruta del PID, mientra que environ da la ruta donde está situado el programa ejecutado.
State:	R (running)
TIME: 00:17:05


PREGUNTA 22.En el caso del proceso hijo, ¿a qué ficheros “apuntan” los ficheros cwd y exe?
¿Cuál crees que es el significado de cwd y exe?

No apuntan a nada ya que el hijo está en modo zombie.

PREGUNTA 23.En el caso del proceso hijo, ¿puedes mostrar el contenido de los ficheros
environ, status y cmdline del proceso hijo? ¿En qué estado se encuentra?

environ está vacio aunque solo es accedible con el comando sudo, status muestra la información sobre el estado del proceso y cmdline está vacio.

PREGUNTA 24.En el caso del proceso hijo, ¿a qué ficheros “apuntan” los ficheros cwd y exe?
¿Cuál crees que es el significado de cwd y exe? ¿Qué diferencias hay con la versión anterior?
¿A qué se deben?

cwd es un enlace al directorio actual en funcionamiento para el proceso, exe es el enlace  al ejecutable de este proceso.
Al no hacer mutar el proceso i no finalizar siguen apuntando, debido al bucle del final.

PREGUNTA 25.En el caso del proceso hijo, ¿puedes mostrar el contenido de los ficheros
environ, status y cmdline del proceso hijo? ¿En qué estado se encuentra? ¿Qué diferencias hay
con la versión anterior? ¿A qué se deben?

El contenido de los ficheros environ, status y cmdline no es vacio para ninguno de ellos. Está en estado 'running' a diferencia del otro que estaba en estado zombie.

PREGUNTA 26.Comprueba el fichero status de /proc/PID_PADRE. ¿En qué estado está el
proceso padre?

Esta en estado esperando.

PREGUNTA 27.¿Qué has hecho para guardar la salida de las ejecuciones de myPS3?

He redireccionado el output con > .







