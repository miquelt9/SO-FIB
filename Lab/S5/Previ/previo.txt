000000000000038c r __abi_tag
                 U atoi@GLIBC_2.2.5
0000000000004010 B __bss_start
0000000000004010 b completed.0
                 w __cxa_finalize@GLIBC_2.2.5
0000000000004000 D __data_start
0000000000004000 W data_start
0000000000001110 t deregister_tm_clones
0000000000001180 t __do_global_dtors_aux
0000000000003da0 d __do_global_dtors_aux_fini_array_entry
0000000000004008 D __dso_handle
0000000000003da8 d _DYNAMIC
0000000000004010 D _edata
0000000000004018 B _end
                 U exit@GLIBC_2.2.5
00000000000012f8 T _fini
00000000000011c0 t frame_dummy
0000000000003d98 d __frame_dummy_init_array_entry
0000000000002134 r __FRAME_END__
0000000000003f98 d _GLOBAL_OFFSET_TABLE_
                 w __gmon_start__
0000000000002030 r __GNU_EH_FRAME_HDR
0000000000001000 T _init
0000000000002000 R _IO_stdin_used
                 w _ITM_deregisterTMCloneTable
                 w _ITM_registerTMCloneTable
0000000000004014 B j
                 U __libc_start_main@GLIBC_2.34
00000000000011ec T main
0000000000001140 t register_tm_clones
                 U sprintf@GLIBC_2.2.5
00000000000010e0 T _start
                 U strlen@GLIBC_2.2.5
00000000000011c9 T suma
0000000000004010 D __TMC_END__
                 U write@GLIBC_2.2.5

mem1_previo:

¿Es posible saber la dirección de las variables “i” y “j” con el comando nm? ¿Por qué?
¿En qué zona de memoria están reservadas estas variables? Busca también la
dirección asignada a la función “suma”.

La direcció de la i no, la de la j si.
Això es dona a la zona en que estan guardades cadascuna de les variables, mentre que la j està a la zona de memòria estàtica, la i es situa a la pila.
00000000000011c9 T suma

- Per compilar mem1_previo.c de forma estàtica he utilitzat #gcc -o mem1_previo mem1_previo.c -static

mem2_previo:

10:
  00400000-00401000 r--p 00000000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  00401000-00497000 r-xp 00001000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  00497000-004c0000 r--p 00097000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  004c0000-004c4000 r--p 000bf000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  004c4000-004c7000 rw-p 000c3000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  004c7000-004f4000 rw-p 00000000 00:00 0
  01dce000-01df0000 rw-p 00000000 00:00 0                                  [heap]
  7fffd2a52000-7fffd2a73000 rw-p 00000000 00:00 0                          [stack]
  7fffd2b6a000-7fffd2b6e000 r--p 00000000 00:00 0                          [vvar]
  7fffd2b6e000-7fffd2b70000 r-xp 00000000 00:00 0                          [vdso]
  ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]


40000:
  00400000-00401000 r--p 00000000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  00401000-00497000 r-xp 00001000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  00497000-004c0000 r--p 00097000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  004c0000-004c4000 r--p 000bf000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  004c4000-004c7000 rw-p 000c3000 103:05 4084977                           /home/miquel/Documents/FIB/SO/S5/mem2_previo
  004c7000-004f4000 rw-p 00000000 00:00 0
  01786000-017a8000 rw-p 00000000 00:00 0                                  [heap]
  7fff685c5000-7fff685e6000 rw-p 00000000 00:00 0                          [stack]
  7fff685e9000-7fff685ed000 r--p 00000000 00:00 0                          [vvar]
  7fff685ed000-7fff685ef000 r-xp 00000000 00:00 0                          [vdso]
  ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]

mem2_previo_v2:

10:
  00400000-00401000 r--p 00000000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  00401000-00497000 r-xp 00001000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  00497000-004c0000 r--p 00097000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  004c0000-004c4000 r--p 000bf000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  004c4000-004c7000 rw-p 000c3000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  004c7000-004cc000 rw-p 00000000 00:00 0
  01ab9000-01adc000 rw-p 00000000 00:00 0                                  [heap]
  7ffdda82a000-7ffdda84b000 rw-p 00000000 00:00 0                          [stack]
  7ffdda8ac000-7ffdda8b0000 r--p 00000000 00:00 0                          [vvar]
  7ffdda8b0000-7ffdda8b2000 r-xp 00000000 00:00 0                          [vdso]
  ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]

40000:
  00400000-00401000 r--p 00000000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  00401000-00497000 r-xp 00001000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  00497000-004c0000 r--p 00097000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  004c0000-004c4000 r--p 000bf000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  004c4000-004c7000 rw-p 000c3000 103:05 4077233                           /home/miquel/Documents/FIB/SO/S5/mem2_previo_v2
  004c7000-004cc000 rw-p 00000000 00:00 0
  019a1000-019eb000 rw-p 00000000 00:00 0                                  [heap]
  7fffe9169000-7fffe918a000 rw-p 00000000 00:00 0                          [stack]
  7fffe919c000-7fffe91a0000 r--p 00000000 00:00 0                          [vvar]
  7fffe91a0000-7fffe91a2000 r-xp 00000000 00:00 0                          [vdso]
  ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]


No hi ha diferència entre el mem2_previo i mem2_previo_v2, el valor fi-inici del heap val:
01df0000-01dce000 = 0x22000 (pel de 10 mem2_previo) i 017a8000-01786000 = 0x22000 (pel de 40000 mem2_previo)
01adc000-01ab9000 = 0x23000 (pel de 10 mem2_previo_v2) i 019eb000-019a1000 = 0x4a000 (pel de 40000 mem2_previo)
En el mem2_previo el sistema gestiona la memòria, mentre que en el mem2_previo_v2 la gestionem nosaltres. Donat que no l'allibarem la memoria reservada no s'allibera i per tant el heap no disminueix.
